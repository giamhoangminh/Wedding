/* eslint-disable no-restricted-globals */
import React from "react";

import { SectionWrapper } from "../../../_principles/styles";
import {
  Background, Title, Heading, WrapMain, FormInput, FormOut
} from "./styles";
import { BgLayout, ImgFlower } from '../../../assets/images/index'

import { AiOutlineSend  } from "react-icons/ai";

import axios from 'axios';

export function Message() {
  const [name, setName] = React.useState('');
  const [text, setText] = React.useState('');
  const [list, setList] = React.useState([]);
  const [isSubmit, setIsSubmit] = React.useState(false);

  const onInputName = (event) => {
    setName(event.target.value || '')
  };

  const onInputText = (event) => {
    setText(event.target.value || '')
  };

  const onSubmitMessage = (event) => {
    if (!name || !text) {
      setIsSubmit(true);
      return
    }
    setIsSubmit(false);
    const data = {
      name: name,
      text: text,
    }
    axios.post('https://sheet.best/api/sheets/60d6a786-4344-4ebd-b17e-8a1452129713', data)
    .then(response => {
      if (response) {
        setName('');
        setText('');
        getMessage();
        // setList([data,...list])
      }
    })
  }

  const getMessage = (event) => {
    axios.get('https://sheet.best/api/sheets/60d6a786-4344-4ebd-b17e-8a1452129713')
    .then(response => {
      if (response.data) {
        const list = response.data.reverse()
        setList(list)
      }
    })
    // const list = [
    //   {
    //     name: 'A Ho√† SGUET',
    //     text: 'Kh√¥ng ƒë·∫øn chung vui c√πng em ƒë∆∞·ª£c, ch√∫c m·ª´ng h·∫°nh ph√∫c hai em nha <3'
    //   },
    //   {
    //     name: 'A ƒê√¥ng S5 SGUET',
    //     text: 'M·ª´ng h·∫°nh ph√∫c em nha ^^'
    //   },
    //   {
    //     name: 'T√≠ch Ph√∫c - SGUET',
    //     text: 'Ch√∫c m·ª´ng v·ª£ ch·ªìng b·∫°n Y·∫øn trƒÉm nƒÉm h·∫°nh ph√∫c ‚ô•Ô∏è‚ô•Ô∏è‚ô•Ô∏è'
    //   },
    //   {
    //     name: 'H·∫±ng cute ph√¥ mai que',
    //     text: '"Ch√∫c b·∫°n iu v√† anh S∆°n h·∫°nh ph√∫c trƒÉm nƒÉm, s·ªõm c√≥ qu√Ω t·ª≠ n√® <3 M√£i l√† h√†ng x√≥m b·∫°n nh·ªõ ü§≠"'
    //   },
    //   {
    //     name: 'Ch·ªã Th·∫£o ',
    //     text: 'Ch√∫c hai em trƒÉm nƒÉm h·∫°nh ph√∫c .s·ªõm sinh qu√Ω t·ª≠ nh√©.y√™u e g√°i ch·ªã'
    //   },
    //   {
    //     name: 'Ch·ªã Hacutevl - LCC',
    //     text: 'Ch√∫c m·ª´ng em Y·∫øn c·ªßa tui trƒÉm nƒÉm h·∫°nh ph√∫c ‚ù§Ô∏è Ch√∫c m·ª´ng S∆°n ƒë√£ h·ªët ƒë∆∞·ª£c em tui nha. N√¢ng niu em Y·∫øn ƒë·∫•y nh√°‚Ä¶ kh√¥ng l√† coi ch·ª´ng LCC ƒë√≥ ü§£üí™üèª Zui z·∫ª‚Ä¶. Zui z·∫ª ü•≥'
    //   },
    //   {
    //     name: 'C Ng√¢n - LCC',
    //     text: 'Ch√∫c hai em c·ªßa chu·ªµ trƒÉm nƒÉm h·∫°nh ph√∫c, s·ªõm th√†nh Ph√∫ √¥ng Ph√∫ b√† t·∫°i TB nh√© üíïüíïüíï'
    //   },
    //   {
    //     name: 'Ch·ªã S√≥i th√¥ng minh xinh ƒë·∫πp ƒë√°ng y√™u si√™u c·∫•p v√¥ ƒë·ªãch v·∫°n ng∆∞·ªùi m√™ from LCC with love',
    //     text: 'Cu·ªëi c√πng th√¨ em Y·∫øn c·ªßa ch·ªã c≈©ng t√¨m ƒë∆∞·ª£c ho√†ng t·ª≠ cho ri√™ng m√¨nh r√πi. Ch√∫c em trƒÉm nƒÉm h·∫°nh ph√∫c, m·ªôt ƒë·ªùi an y√™n. Ch√∫c anh S∆°n lu√¥n ƒë∆∞·ª£c em Y·∫øn em s·ªßng.  L√†m ph·∫≠t l√≤ng em Y·∫øn th√¨ anh bi·∫øt tay b·ªçn em nhaaa'
    //   },
    //   {
    //     name: 'ch·ªã Nga 10 ƒëi·ªÉm from LCC',
    //     text: 'ch√∫c m·ª´ng em Y·∫øn c·ªßa ch·ªã, ch√∫c em m√£i h·∫°nh ph√∫c, c∆∞·ªùi th·∫≠t nhi·ªÅuuuuu üòò... S∆°n m√† b·∫Øt n·∫°t em c·ªßa em l√† h·ªôi ƒë·ªìng em kh√¥ng tha cho anh ƒë√¢u ƒë·∫•y üëÄüëä'
    //   },
    //   {
    //     name: 'Ch·ªã Trang cute n·∫•u ƒÉn ngon - From L·ª•c c√¥ng ch√∫a with love',
    //     text: '"Ch√∫c hai em c·ªßa ch·ªã 5-10-15-20-‚Ä¶- enn·ªù nƒÉm n·ªØa v·∫´n lu√¥n y√™u th∆∞∆°ng nhau nh∆∞ ng√†y ƒë·∫ßu m·ªõi y√™u ‚ù§Ô∏è Lu√¥n n·∫Øm tay nhau v∆∞·ª£t qua m·ªçi kh√≥ khƒÉn th·ª≠ th√°ch tr√™n ƒë·ªùi. L·ª•c c√¥ng ch√∫a m√£i iu hai em ‚ù§Ô∏è"'
    //   },
    //   {
    //     name: 'A C·ª±',
    //     text: '"Ch√∫c 2 ƒë·ª©a trƒÉm nƒÉm h·∫°nh ph√∫c  /n Lu√¥n lu√¥n ƒë∆∞·ª£c h·∫°nh ph√∫c v·∫πn tr√≤n nh√©!"'
    //   },
    //   {
    //     name: 'HuongMT - dev ƒë·ªânh',
    //     text: 'Ch√∫c anh ch·ªã nƒÉm trƒÉm nƒÉm h·∫°nh ph√∫c nh√© @@'
    //   },
    //   {
    //     name: 'Duy√™nNT',
    //     text: 'ƒê√°ng iu qu√° ƒë·ªói <3 <3  Ch√∫c 2 em ƒë√°m c∆∞·ªõi th·∫≠t h·∫°nh ph√∫c, cu·ªôc s·ªëng vi√™n m√£n.'
    //   },
    //   {
    //     name: 'E L·ªôc',
    //     text: 'Ch√∫c anh S∆°n v√† b·∫°n Y·∫øn trƒÉm nƒÉm h·∫°nh ph√∫c <3'
    //   },
    //   {
    //     name: 'H∆∞ng Bunbu',
    //     text: '<script>alert(""Ch√∫c anh S∆°n v√† b·∫°n Y·∫øn trƒÉm nƒÉm h·∫°nh ph√∫c. <3"");</script>'
    //   },
    //   {
    //     name: 'test',
    //     text: 'c√¥ d√¢u xinh ƒë·∫πp tuy·ªát z·ªùi <3'
    //   },
    //   {
    //     name: 'NamT',
    //     text: '"Ch√∫c anh S∆°n v√† b·∫°n Y·∫øn trƒÉm nƒÉm h·∫°nh ph√∫c. Ti·ªán th·ªÉ cho em xin c√°i source code nh·ªõ a <3 "'
    //   },
    //   {
    //     name: 'hanql',
    //     text: 'l·ªùi ch√∫c n√†y thay cho $$ em nh√© :v'
    //   },
    //   {
    //     name: 'HR Bunbu',
    //     text: 'Ch√∫c 2 b·∫°n trƒÉm nƒÉm h·∫°nh ph√∫c nha. Happy Weddingggg  '
    //   },
    //   {
    //     name: 'H·∫°t G·∫°o',
    //     text: 'Y√™u ch√∫ r·ªÉ'
    //   },
    //   {
    //     name: 'Nam Tit',
    //     text: 'Ch√∫c anh trƒÉm nƒÉm h·∫°nh ph√∫c'
    //   },
    //   {
    //     name: 'Ch·ªã k·∫ø to√°n Bunbu',
    //     text: 'Ch√∫c m·ª´ng h·∫°nh ph√∫c 2 em nha!!!'
    //   },
    //   {
    //     name: 'S∆°n Minh',
    //     text: 'Ch√∫c anh trƒÉm nƒÉm h·∫°nh ph√∫c'
    //   },
    //   {
    //     name: 'C√¥ d√¢u',
    //     text: 'V√¢ng ‚ù§Ô∏è'
    //   },
    //   {
    //     name: 'Ch√∫ r·ªÉ',
    //     text: 'Ch√∫c b√© lu√¥n h·∫°nh ph√∫c b√™n anh'
    //   }
    // ]
    // setList(list)
  }

  React.useEffect(() => {
    getMessage()
  }, []);

  return (
    <SectionWrapper id="message">
      <Background  bg={BgLayout}>
        <Heading>
          <img src={ImgFlower} alt=''></img>
          <Title>G·ª≠i l·ªùi ch√∫c</Title>
        </Heading>
        <WrapMain>
          <FormInput>
            <input type="text" value={name} placeholder="Nh·∫≠p h·ªç t√™n *" onInput={() => onInputName(event)}></input>
            { isSubmit && !name && (
              <span>Vui l√≤ng nh·∫≠p t√™n c·ªßa b·∫°n</span>
            )}
            <textarea value={text} rows="4" cols="50" placeholder="Nh·∫≠p l·ªùi ch√∫c c·ªßa b·∫°n *" onInput={() => onInputText(event)}></textarea>
            { isSubmit && !text && (
              <span>Vui l√≤ng nh·∫≠p l·ªùi ch√∫c c·ªßa b·∫°n</span>
            )}
            <div className="text-center">
              <button onClick={() => onSubmitMessage()}>G·ª≠i l·ªùi ch√∫c <AiOutlineSend/></button>
            </div>
          </FormInput>
          <FormOut>
            <ul className="list">
              {list.map((item, i) => (
                <li className="item">
                  <div className="item__name"> {item.name} </div>
                  <p className="item__content"> {item.text}</p>
                </li>
              ))}
            </ul>
          </FormOut>
        </WrapMain>
      </Background>
    </SectionWrapper>
  );
}
